For more informations go to:
http://sum-e.com/

	CONTENTS
1. Introduction
2. Apache
3. General Configuration
4. Directory stucture
5. Database
6. Memcache
7. First time run

1. Introduction

	Sum-e.com ecommerce is open source web based shopping basket with
	integrated PayPal payments (as a module).

	It is uses LiteEntity framework (developed by sum-e.com Team as well) and Smarty.

	Requirements (example):
	- Linux or FreeBSD,
	- PHP >= 5.2.0,
	- Apache,
	- MySQL or SQLite,
	- Memcached, php5-memcache,
	- php5-gd,
	- Smarty

	This shop is easy to use for administrator and shoppers. But we highly recommend to leave instalation
	and setup for experienced developers. We try to keep clean php code so it could be easy to extend/customize
	shop to meet sellers/customers needs.

	Our goals are:
	- easy to use,
	- security,
	- speed.

	Developer keywords:
	- object orientated,
	- MVC - model view controller,
	- DAO - database access object.

2. Apache (httpd) 
	2.1 Create .htaccess if does not exist 
	
	Example of .htaccess file:
	
	<IfModule mod_rewrite.c>
    	RewriteEngine on
    	RewriteRule    ^resources/(.*)$  resources/$1 [L]
    	RewriteRule    .*       index.php
	</IfModule>


	2.2 Sample apache virtualhost config file is in config/httpd.conf
		- Edit this file to match your paths
		To configure apache in ubuntu you need to do:
		sudo ln -s config/httpd.conf /etc/apache2/sites-available/demo-shop
		sudo a2ensite demo-shop
		sudo apache2ctl restart

3. General configuration
Edit config/config.php:

PROJECT_PATH - path where you found this file, for example:
	 /var/www/shop-demo
	Everything you do below, do in this path (for example):
		cd /var/www/shop-demo 

PRODUCTION - set it if your shop is ready to be shown to the public, it will disable error messages (critical will be sent to your email), also configuration is split to use production or development enviroment.

ADMIN_EMAIL - put there your email where you will receive letters from users via contact us form and system errors.

SMARTY_COMPILE_DIR - /tmp/something is great

ASSETS_PATH - path to shop assets (full size images) - must be writeable to web server

PAYPAL_ACCOUNT_EMAIL - your account username (where all money will go)

4. Directory structure
PROJECT_PATH 	
				/assets 
				/class			// other models/class
				/config
				/controllers
				/entity 		// DAO objects - models
				/resources
				/templates

Only assets directory should be writeable for http server, other file should be only readable.

In ubuntu linux do:

sudo chown -R www-data:www-data assets

5. Database
	5.1 Create database for your shop.
		$ mysql -u root -p 
		mysql> create database shopdemo;

	5.2 Create user with at least usage privilidges to shop database.
		mysql> grant all on shopdemo.* to 'shopdemo'@'%' identified by 'shopdemopassword';
		mysql> quit;

	5.3 Fill config/database.php file with your settings.
	5.4 Import database.sql file into shop database

		In command line:
		mysql -u root -p your_shop_database_name_here < database.sql

	You may delete this file
		rm database.sql

6. Memcache
	You will need memcache for object cacheing

	To install:
		
		sudo apt-get install memcached

	To run:
		sudo memcached -u nobody start &

	and php module for memcache
	
		sudo apt-get install php5-memcache	

	In your config file (config/config.php) change CACHE_PREFIX to anything for
	each shop you have on that server. You can leave default if it is only one
	installation. 

		

7. First time type in browser:
	http://your_shop_address/Index/FirstTime

8. For further info refer to http://sum-e.com/ , use our forum http://sum-e.com/ or contact one of our developers:
	- yahoo im: fornve@yahoo.co.uk

9. Good luck
